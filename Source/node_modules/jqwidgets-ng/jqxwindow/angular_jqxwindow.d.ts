/// <reference path="../jqwidgets.d.ts" />
import { EventEmitter, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class jqxWindowComponent implements OnChanges {
    attrAutoOpen: boolean;
    attrAnimationType: string;
    attrCollapsed: boolean;
    attrCollapseAnimationDuration: number;
    attrContent: string;
    attrCloseAnimationDuration: number;
    attrCloseButtonSize: number;
    attrCloseButtonAction: string;
    attrCancelButton: any;
    attrDragArea: jqwidgets.WindowDragArea;
    attrDraggable: boolean;
    attrDisabled: boolean;
    attrInitContent: () => void;
    attrIsModal: boolean;
    attrKeyboardCloseKey: number | string;
    attrKeyboardNavigation: boolean;
    attrMinHeight: string | number;
    attrMaxHeight: string | number;
    attrMinWidth: number | string;
    attrMaxWidth: number | string;
    attrModalOpacity: number | string;
    attrModalZIndex: number;
    attrModalBackgroundZIndex: number;
    attrOkButton: any;
    attrPosition: string | any;
    attrRtl: boolean;
    attrResizable: boolean;
    attrShowAnimationDuration: number;
    attrShowCloseButton: boolean;
    attrShowCollapseButton: boolean;
    attrTheme: string;
    attrTitle: string;
    attrZIndex: number;
    attrWidth: string | number;
    attrHeight: string | number;
    autoCreate: boolean;
    properties: string[];
    host: any;
    elementRef: ElementRef;
    widgetObject: jqwidgets.jqxWindow;
    constructor(containerElement: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): boolean;
    arraysEqual(attrValue: any, hostValue: any): boolean;
    manageAttributes(): any;
    moveClasses(parentEl: HTMLElement, childEl: HTMLElement): void;
    moveStyles(parentEl: HTMLElement, childEl: HTMLElement): void;
    createComponent(options?: any): void;
    createWidget(options?: any): void;
    __updateRect__(): void;
    setOptions(options: any): void;
    autoOpen(arg?: boolean): boolean;
    animationType(arg?: string): string;
    collapsed(arg?: boolean): boolean;
    collapseAnimationDuration(arg?: number): number;
    content(arg?: string): string;
    closeAnimationDuration(arg?: number): number;
    closeButtonSize(arg?: number): number;
    closeButtonAction(arg?: string): string;
    cancelButton(arg?: any): any;
    dragArea(arg?: jqwidgets.WindowDragArea): jqwidgets.WindowDragArea;
    draggable(arg?: boolean): boolean;
    disabled(arg?: boolean): boolean;
    height(arg?: string | number): string | number;
    initContent(arg?: () => void): () => void;
    isModal(arg?: boolean): boolean;
    keyboardCloseKey(arg?: number | string): number | string;
    keyboardNavigation(arg?: boolean): boolean;
    minHeight(arg?: string | number): string | number;
    maxHeight(arg?: string | number): string | number;
    minWidth(arg?: number | string): number | string;
    maxWidth(arg?: number | string): number | string;
    modalOpacity(arg?: undefined): undefined;
    modalZIndex(arg?: number): number;
    modalBackgroundZIndex(arg?: number): number;
    okButton(arg?: any): any;
    position(arg?: string | any): string | any;
    rtl(arg?: boolean): boolean;
    resizable(arg?: boolean): boolean;
    showAnimationDuration(arg?: number): number;
    showCloseButton(arg?: boolean): boolean;
    showCollapseButton(arg?: boolean): boolean;
    theme(arg?: string): string;
    title(arg?: string): string;
    width(arg?: string | number): string | number;
    zIndex(arg?: number): number;
    bringToFront(): void;
    close(): void;
    collapse(): void;
    closeAll(): void;
    disable(): void;
    destroy(): void;
    enable(): void;
    expand(): void;
    focus(): void;
    isOpen(): boolean;
    move(top: number, left: number): void;
    open(): void;
    hide(): void;
    resize(top: number, left: number): void;
    setTitle(title: string): void;
    setContent(content: string): void;
    onClose: EventEmitter<any>;
    onCollapse: EventEmitter<any>;
    onExpand: EventEmitter<any>;
    onMoving: EventEmitter<any>;
    onMoved: EventEmitter<any>;
    onOpen: EventEmitter<any>;
    onResizing: EventEmitter<any>;
    onResized: EventEmitter<any>;
    __wireEvents__(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<jqxWindowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<jqxWindowComponent, "jqxWindow", never, { "autoCreate": "auto-create"; "attrAutoOpen": "autoOpen"; "attrAnimationType": "animationType"; "attrCollapsed": "collapsed"; "attrCollapseAnimationDuration": "collapseAnimationDuration"; "attrContent": "content"; "attrCloseAnimationDuration": "closeAnimationDuration"; "attrCloseButtonSize": "closeButtonSize"; "attrCloseButtonAction": "closeButtonAction"; "attrCancelButton": "cancelButton"; "attrDragArea": "dragArea"; "attrDraggable": "draggable"; "attrDisabled": "disabled"; "attrInitContent": "initContent"; "attrIsModal": "isModal"; "attrKeyboardCloseKey": "keyboardCloseKey"; "attrKeyboardNavigation": "keyboardNavigation"; "attrMinHeight": "minHeight"; "attrMaxHeight": "maxHeight"; "attrMinWidth": "minWidth"; "attrMaxWidth": "maxWidth"; "attrModalOpacity": "modalOpacity"; "attrModalZIndex": "modalZIndex"; "attrModalBackgroundZIndex": "modalBackgroundZIndex"; "attrOkButton": "okButton"; "attrPosition": "position"; "attrRtl": "rtl"; "attrResizable": "resizable"; "attrShowAnimationDuration": "showAnimationDuration"; "attrShowCloseButton": "showCloseButton"; "attrShowCollapseButton": "showCollapseButton"; "attrTheme": "theme"; "attrTitle": "title"; "attrZIndex": "zIndex"; "attrWidth": "width"; "attrHeight": "height"; }, { "onClose": "onClose"; "onCollapse": "onCollapse"; "onExpand": "onExpand"; "onMoving": "onMoving"; "onMoved": "onMoved"; "onOpen": "onOpen"; "onResizing": "onResizing"; "onResized": "onResized"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhcl9qcXh3aW5kb3cuZC50cyIsInNvdXJjZXMiOlsiYW5ndWxhcl9qcXh3aW5kb3cuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi9qcXdpZGdldHMuZC50c1wiIC8+XHJcbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgRWxlbWVudFJlZiwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIGpxeFdpbmRvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgICBhdHRyQXV0b09wZW46IGJvb2xlYW47XHJcbiAgICBhdHRyQW5pbWF0aW9uVHlwZTogc3RyaW5nO1xyXG4gICAgYXR0ckNvbGxhcHNlZDogYm9vbGVhbjtcclxuICAgIGF0dHJDb2xsYXBzZUFuaW1hdGlvbkR1cmF0aW9uOiBudW1iZXI7XHJcbiAgICBhdHRyQ29udGVudDogc3RyaW5nO1xyXG4gICAgYXR0ckNsb3NlQW5pbWF0aW9uRHVyYXRpb246IG51bWJlcjtcclxuICAgIGF0dHJDbG9zZUJ1dHRvblNpemU6IG51bWJlcjtcclxuICAgIGF0dHJDbG9zZUJ1dHRvbkFjdGlvbjogc3RyaW5nO1xyXG4gICAgYXR0ckNhbmNlbEJ1dHRvbjogYW55O1xyXG4gICAgYXR0ckRyYWdBcmVhOiBqcXdpZGdldHMuV2luZG93RHJhZ0FyZWE7XHJcbiAgICBhdHRyRHJhZ2dhYmxlOiBib29sZWFuO1xyXG4gICAgYXR0ckRpc2FibGVkOiBib29sZWFuO1xyXG4gICAgYXR0ckluaXRDb250ZW50OiAoKSA9PiB2b2lkO1xyXG4gICAgYXR0cklzTW9kYWw6IGJvb2xlYW47XHJcbiAgICBhdHRyS2V5Ym9hcmRDbG9zZUtleTogbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAgYXR0cktleWJvYXJkTmF2aWdhdGlvbjogYm9vbGVhbjtcclxuICAgIGF0dHJNaW5IZWlnaHQ6IHN0cmluZyB8IG51bWJlcjtcclxuICAgIGF0dHJNYXhIZWlnaHQ6IHN0cmluZyB8IG51bWJlcjtcclxuICAgIGF0dHJNaW5XaWR0aDogbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAgYXR0ck1heFdpZHRoOiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBhdHRyTW9kYWxPcGFjaXR5OiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBhdHRyTW9kYWxaSW5kZXg6IG51bWJlcjtcclxuICAgIGF0dHJNb2RhbEJhY2tncm91bmRaSW5kZXg6IG51bWJlcjtcclxuICAgIGF0dHJPa0J1dHRvbjogYW55O1xyXG4gICAgYXR0clBvc2l0aW9uOiBzdHJpbmcgfCBhbnk7XHJcbiAgICBhdHRyUnRsOiBib29sZWFuO1xyXG4gICAgYXR0clJlc2l6YWJsZTogYm9vbGVhbjtcclxuICAgIGF0dHJTaG93QW5pbWF0aW9uRHVyYXRpb246IG51bWJlcjtcclxuICAgIGF0dHJTaG93Q2xvc2VCdXR0b246IGJvb2xlYW47XHJcbiAgICBhdHRyU2hvd0NvbGxhcHNlQnV0dG9uOiBib29sZWFuO1xyXG4gICAgYXR0clRoZW1lOiBzdHJpbmc7XHJcbiAgICBhdHRyVGl0bGU6IHN0cmluZztcclxuICAgIGF0dHJaSW5kZXg6IG51bWJlcjtcclxuICAgIGF0dHJXaWR0aDogc3RyaW5nIHwgbnVtYmVyO1xyXG4gICAgYXR0ckhlaWdodDogc3RyaW5nIHwgbnVtYmVyO1xyXG4gICAgYXV0b0NyZWF0ZTogYm9vbGVhbjtcclxuICAgIHByb3BlcnRpZXM6IHN0cmluZ1tdO1xyXG4gICAgaG9zdDogYW55O1xyXG4gICAgZWxlbWVudFJlZjogRWxlbWVudFJlZjtcclxuICAgIHdpZGdldE9iamVjdDoganF3aWRnZXRzLmpxeFdpbmRvdztcclxuICAgIGNvbnN0cnVjdG9yKGNvbnRhaW5lckVsZW1lbnQ6IEVsZW1lbnRSZWYpO1xyXG4gICAgbmdPbkluaXQoKTogdm9pZDtcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiBib29sZWFuO1xyXG4gICAgYXJyYXlzRXF1YWwoYXR0clZhbHVlOiBhbnksIGhvc3RWYWx1ZTogYW55KTogYm9vbGVhbjtcclxuICAgIG1hbmFnZUF0dHJpYnV0ZXMoKTogYW55O1xyXG4gICAgbW92ZUNsYXNzZXMocGFyZW50RWw6IEhUTUxFbGVtZW50LCBjaGlsZEVsOiBIVE1MRWxlbWVudCk6IHZvaWQ7XHJcbiAgICBtb3ZlU3R5bGVzKHBhcmVudEVsOiBIVE1MRWxlbWVudCwgY2hpbGRFbDogSFRNTEVsZW1lbnQpOiB2b2lkO1xyXG4gICAgY3JlYXRlQ29tcG9uZW50KG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xyXG4gICAgY3JlYXRlV2lkZ2V0KG9wdGlvbnM/OiBhbnkpOiB2b2lkO1xyXG4gICAgX191cGRhdGVSZWN0X18oKTogdm9pZDtcclxuICAgIHNldE9wdGlvbnMob3B0aW9uczogYW55KTogdm9pZDtcclxuICAgIGF1dG9PcGVuKGFyZz86IGJvb2xlYW4pOiBib29sZWFuO1xyXG4gICAgYW5pbWF0aW9uVHlwZShhcmc/OiBzdHJpbmcpOiBzdHJpbmc7XHJcbiAgICBjb2xsYXBzZWQoYXJnPzogYm9vbGVhbik6IGJvb2xlYW47XHJcbiAgICBjb2xsYXBzZUFuaW1hdGlvbkR1cmF0aW9uKGFyZz86IG51bWJlcik6IG51bWJlcjtcclxuICAgIGNvbnRlbnQoYXJnPzogc3RyaW5nKTogc3RyaW5nO1xyXG4gICAgY2xvc2VBbmltYXRpb25EdXJhdGlvbihhcmc/OiBudW1iZXIpOiBudW1iZXI7XHJcbiAgICBjbG9zZUJ1dHRvblNpemUoYXJnPzogbnVtYmVyKTogbnVtYmVyO1xyXG4gICAgY2xvc2VCdXR0b25BY3Rpb24oYXJnPzogc3RyaW5nKTogc3RyaW5nO1xyXG4gICAgY2FuY2VsQnV0dG9uKGFyZz86IGFueSk6IGFueTtcclxuICAgIGRyYWdBcmVhKGFyZz86IGpxd2lkZ2V0cy5XaW5kb3dEcmFnQXJlYSk6IGpxd2lkZ2V0cy5XaW5kb3dEcmFnQXJlYTtcclxuICAgIGRyYWdnYWJsZShhcmc/OiBib29sZWFuKTogYm9vbGVhbjtcclxuICAgIGRpc2FibGVkKGFyZz86IGJvb2xlYW4pOiBib29sZWFuO1xyXG4gICAgaGVpZ2h0KGFyZz86IHN0cmluZyB8IG51bWJlcik6IHN0cmluZyB8IG51bWJlcjtcclxuICAgIGluaXRDb250ZW50KGFyZz86ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkO1xyXG4gICAgaXNNb2RhbChhcmc/OiBib29sZWFuKTogYm9vbGVhbjtcclxuICAgIGtleWJvYXJkQ2xvc2VLZXkoYXJnPzogbnVtYmVyIHwgc3RyaW5nKTogbnVtYmVyIHwgc3RyaW5nO1xyXG4gICAga2V5Ym9hcmROYXZpZ2F0aW9uKGFyZz86IGJvb2xlYW4pOiBib29sZWFuO1xyXG4gICAgbWluSGVpZ2h0KGFyZz86IHN0cmluZyB8IG51bWJlcik6IHN0cmluZyB8IG51bWJlcjtcclxuICAgIG1heEhlaWdodChhcmc/OiBzdHJpbmcgfCBudW1iZXIpOiBzdHJpbmcgfCBudW1iZXI7XHJcbiAgICBtaW5XaWR0aChhcmc/OiBudW1iZXIgfCBzdHJpbmcpOiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBtYXhXaWR0aChhcmc/OiBudW1iZXIgfCBzdHJpbmcpOiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBtb2RhbE9wYWNpdHkoYXJnPzogdW5kZWZpbmVkKTogdW5kZWZpbmVkO1xyXG4gICAgbW9kYWxaSW5kZXgoYXJnPzogbnVtYmVyKTogbnVtYmVyO1xyXG4gICAgbW9kYWxCYWNrZ3JvdW5kWkluZGV4KGFyZz86IG51bWJlcik6IG51bWJlcjtcclxuICAgIG9rQnV0dG9uKGFyZz86IGFueSk6IGFueTtcclxuICAgIHBvc2l0aW9uKGFyZz86IHN0cmluZyB8IGFueSk6IHN0cmluZyB8IGFueTtcclxuICAgIHJ0bChhcmc/OiBib29sZWFuKTogYm9vbGVhbjtcclxuICAgIHJlc2l6YWJsZShhcmc/OiBib29sZWFuKTogYm9vbGVhbjtcclxuICAgIHNob3dBbmltYXRpb25EdXJhdGlvbihhcmc/OiBudW1iZXIpOiBudW1iZXI7XHJcbiAgICBzaG93Q2xvc2VCdXR0b24oYXJnPzogYm9vbGVhbik6IGJvb2xlYW47XHJcbiAgICBzaG93Q29sbGFwc2VCdXR0b24oYXJnPzogYm9vbGVhbik6IGJvb2xlYW47XHJcbiAgICB0aGVtZShhcmc/OiBzdHJpbmcpOiBzdHJpbmc7XHJcbiAgICB0aXRsZShhcmc/OiBzdHJpbmcpOiBzdHJpbmc7XHJcbiAgICB3aWR0aChhcmc/OiBzdHJpbmcgfCBudW1iZXIpOiBzdHJpbmcgfCBudW1iZXI7XHJcbiAgICB6SW5kZXgoYXJnPzogbnVtYmVyKTogbnVtYmVyO1xyXG4gICAgYnJpbmdUb0Zyb250KCk6IHZvaWQ7XHJcbiAgICBjbG9zZSgpOiB2b2lkO1xyXG4gICAgY29sbGFwc2UoKTogdm9pZDtcclxuICAgIGNsb3NlQWxsKCk6IHZvaWQ7XHJcbiAgICBkaXNhYmxlKCk6IHZvaWQ7XHJcbiAgICBkZXN0cm95KCk6IHZvaWQ7XHJcbiAgICBlbmFibGUoKTogdm9pZDtcclxuICAgIGV4cGFuZCgpOiB2b2lkO1xyXG4gICAgZm9jdXMoKTogdm9pZDtcclxuICAgIGlzT3BlbigpOiBib29sZWFuO1xyXG4gICAgbW92ZSh0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyKTogdm9pZDtcclxuICAgIG9wZW4oKTogdm9pZDtcclxuICAgIGhpZGUoKTogdm9pZDtcclxuICAgIHJlc2l6ZSh0b3A6IG51bWJlciwgbGVmdDogbnVtYmVyKTogdm9pZDtcclxuICAgIHNldFRpdGxlKHRpdGxlOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgc2V0Q29udGVudChjb250ZW50OiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgb25DbG9zZTogRXZlbnRFbWl0dGVyPGFueT47XHJcbiAgICBvbkNvbGxhcHNlOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIG9uRXhwYW5kOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIG9uTW92aW5nOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIG9uTW92ZWQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgb25PcGVuOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIG9uUmVzaXppbmc6IEV2ZW50RW1pdHRlcjxhbnk+O1xyXG4gICAgb25SZXNpemVkOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIF9fd2lyZUV2ZW50c19fKCk6IHZvaWQ7XHJcbn1cclxuIl19